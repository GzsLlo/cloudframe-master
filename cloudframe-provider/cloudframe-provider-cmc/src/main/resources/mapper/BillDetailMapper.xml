<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ai.cloudframe.provider.cmc.mapper.BillDetailMapper">
    <select id="getInfoBycycleCode" resultType="com.ai.cloudframe.provider.api.sys.model.dto.ChargeOffDto">
        SELECT
        A.BILL_DETAIL_ID,
        A.BILL_ID,
        A.CYCLE_CODE,
        A.BILL_STATUS,
        A.USER_ID,
        A.ORDER_ID,
        A.GOOD_ID,
        A.GOOD_PRODUCT_PRICE,
        A.PRODUCT_ID,
        A.PRODUCT_PRICE,
        A.CREATE_DATE,
        B.CHARGE_TYPE,
        C.SETTLE_SCALE,
        C.SETTLER_CYCLE
        FROM
        tf_asiainfo_bill_detail A
        LEFT JOIN tf_asiainfo_product B
        ON A.PRODUCT_ID=B.PRODUCT_ID
        LEFT JOIN tf_asiainfo_settle_rule C
        ON A.PRODUCT_ID=C.PRODUCT_ID
        AND A.GOOD_ID=C.GOOD_ID
        WHERE
        A.CYCLE_CODE = #{cycleCode}
        AND A.BILL_STATUS = '0'
        AND B.START_DATE &lt;=sysdate AND B.END_DATE>=sysdate
        AND C.START_DATE &lt;=sysdate AND C.END_DATE>=sysdate
        ORDER BY
        A.ORDER_ID
        ASC
    </select>

    <select id="getMyBillTableOnce" resultType="com.ai.cloudframe.provider.api.sys.model.vo.ChargeOffVo" parameterType="Map">
      SELECT
        A.GOOD_ID,
        A.PRODUCT_ID,
        A.GOOD_PRODUCT_PRICE,
        A.PRODUCT_PRICE,
        SUM(A.PRODUCT_NUM-0) AS PRODUCT_NUM,
        A.SETTLE_SCALE,
        SUM(A.SETTLE_MONEY-0) AS SETTLE_MONEY,
        A.SETTLE_DATE,
        C.GOOD_NAME,
        D.PRODUCT_NAME,
        D.CHARGE_TYPE
        FROM
        tf_asiainfo_bill A
        LEFT JOIN tf_asiainfo_goods C
       ON A.GOOD_ID = C.GOOD_ID
       LEFT JOIN tf_asiainfo_product D
       ON A.PRODUCT_ID=D.PRODUCT_ID
        WHERE
        A.CYCLE_CODE=#{map.CYCLE_CODE}
        AND D.CHARGE_TYPE=#{map.CHARGE_TYPE}
        GROUP BY A.GOOD_ID,A.PRODUCT_ID, A.GOOD_PRODUCT_PRICE,A.PRODUCT_PRICE, A.SETTLE_SCALE, A.SETTLE_DATE, C.GOOD_NAME, D.PRODUCT_NAME, D.CHARGE_TYPE
    </select>

    <select id="isAlreadyExit" resultType="com.ai.cloudframe.provider.api.sys.model.dto.ChargeOffDto" parameterType="Map">
        SELECT
        BILL_ID,
        PRODUCT_NUM
        FROM
        tf_asiainfo_bill
        WHERE
        USER_ID=#{map.USER_ID}
       AND GOOD_ID=#{map.GOOD_ID}
      AND  PRODUCT_ID=#{map.PRODUCT_ID}
    </select>

    <select id="isAlreadyExitByUse" resultType="com.ai.cloudframe.provider.api.sys.model.dto.ChargeOffDto" parameterType="Map">
        SELECT
        GOOD_ID,
        CONCAT(ROUND(SUM(PRODUCT_NUM-0)),'') AS PRODUCT_NUM
        FROM
        tf_asiainfo_bill
        WHERE
        USER_ID=#{map.USER_ID}
        AND GOOD_ID=#{map.GOOD_ID}
        AND  PRODUCT_ID=#{map.PRODUCT_ID}
        group by  USER_ID,GOOD_ID,PRODUCT_ID
    </select>

    <select id="getSelect2Good" resultType="com.ai.cloudframe.provider.api.sys.model.vo.ChargeOffVo" parameterType="Map">
        SELECT
        GOOD_ID as code,
        GOOD_NAME as title
        FROM
        tf_asiainfo_goods
        WHERE
        1=1
         AND START_DATE &lt;=sysdate AND END_DATE>=sysdate
    </select>

    <select id="getallorderId" resultType="com.ai.cloudframe.provider.api.sys.model.vo.ChargeOffVo" parameterType="Map">
       SELECT
	A.ORDER_ID,
	E.ORDER_DATE,
	C.GOOD_NAME
FROM
	tf_asiainfo_bill_detail A
	LEFT JOIN tf_asiainfo_goods_order E
ON A.ORDER_ID=E.ORDER_ID
LEFT JOIN tf_asiainfo_goods C
ON A.GOOD_ID = C.GOOD_ID
WHERE
	A.USER_ID = #{map.userId,jdbcType=VARCHAR}
AND A.CYCLE_CODE = #{map.cycleCode,jdbcType=VARCHAR}
UNION
	SELECT
		A.ORDER_ID,
	E.ORDER_DATE,
	C.GOOD_NAME
	FROM
		tf_asiainfo_bill A
		LEFT JOIN tf_asiainfo_goods_order E
    ON A.ORDER_ID=E.ORDER_ID
    LEFT JOIN tf_asiainfo_goods C
ON A.GOOD_ID = C.GOOD_ID
	WHERE
		A.USER_ID = #{map.USER_ID,jdbcType=VARCHAR}
	AND A.CYCLE_CODE = #{map.CYCLE_CODE,jdbcType=VARCHAR}
    </select>



    <update id="updatebillStatus" parameterType="Map">
        UPDATE tf_asiainfo_bill_detail
        SET BILL_STATUS='1'
        WHERE BILL_DETAIL_ID=#{map.BILL_DETAIL_ID,jdbcType=VARCHAR}
    </update>


    <select id="isAlreadyExitMonth" resultType="com.ai.cloudframe.provider.api.sys.model.dto.ChargeOffDto" parameterType="Map">
        SELECT
        BILL_ID,
        PRODUCT_NUM
        FROM
        tf_asiainfo_bill
        WHERE
        USER_ID=#{map.USER_ID}
       AND GOOD_ID=#{map.GOOD_ID}
      AND  PRODUCT_ID=#{map.PRODUCT_ID}
        AND CYCLE_CODE=#{map.CYCLE_CODE}
    </select>


    <select id="gettableInfoByorderId" resultType="com.ai.cloudframe.provider.api.sys.model.vo.ChargeOffVo" parameterType="Map">
       SELECT
A.GOOD_ID,
A.PRODUCT_ID,
A.GOOD_PRODUCT_PRICE,
A.PRODUCT_PRICE,
NVL(B.PRODUCT_NUM,0) AS PRODUCT_NUM,
C.GOOD_NAME,
C.GOOD_TYPE,
D.PRODUCT_NAME,
D.CHARGE_TYPE
FROM
	tf_asiainfo_bill_detail A
LEFT JOIN (SELECT
ORDER_ID,
CYCLE_CODE,
GOOD_ID,
PRODUCT_ID,
SUM(PRODUCT_NUM-0) AS PRODUCT_NUM
FROM
	tf_asiainfo_bill
WHERE
	ORDER_ID = #{map.ORDER_ID}
AND CYCLE_CODE = #{map.CYCLE_CODE}
GROUP BY ORDER_ID,GOOD_ID,PRODUCT_ID) B
ON A.ORDER_ID=B.ORDER_ID
AND A.GOOD_ID=B.GOOD_ID
AND A.PRODUCT_ID=B.PRODUCT_ID
LEFT JOIN tf_asiainfo_goods C
ON A.GOOD_ID = C.GOOD_ID
LEFT JOIN tf_asiainfo_product D
ON A.PRODUCT_ID=D.PRODUCT_ID
WHERE
	A.ORDER_ID = #{map.ORDER_ID}
AND A.CYCLE_CODE = #{map.CYCLE_CODE}
    </select>

    <select id="getPartnerBillTableOnce" resultType="com.ai.cloudframe.provider.api.sys.model.vo.ChargeOffVo" parameterType="Map">
    SELECT
A.ORDER_ID,
A.USER_ID,
A.GOOD_PRODUCT_PRICE,
A.PRODUCT_PRICE,
A.PRODUCT_NUM,
A.SETTLE_SCALE,
A.SETTLE_MONEY,
A.SETTLE_DATE,
C.GOOD_NAME,
C.GOOD_TYPE,
D.PRODUCT_NAME,
D.CHARGE_TYPE,
E.ORDER_DATE,
H.USER_NAME
    FROM
    tf_asiainfo_bill A
   LEFT JOIN tf_asiainfo_goods C
   ON A.GOOD_ID = C.GOOD_ID
   LEFT JOIN tf_asiainfo_product D
   ON A.PRODUCT_ID=D.PRODUCT_ID
   LEFT JOIN tf_asiainfo_goods_order E
   ON A.ORDER_ID=E.ORDER_ID
   LEFT JOIN td_asiainfo_user H
   ON A.USER_ID=H.USER_ID
    where
    A.CYCLE_CODE = #{map.cycleCode}
    AND D.CHARGE_TYPE=#{map.chargeType}
  <if test="map.goodName!=null and map.goodName!=''">
    AND C.GOOD_NAME LIKE '%'||#{map.goodName}||'%'
   </if>
   <if test="map.productName!=null and map.productName!=''">
    AND D.PRODUCT_NAME LIKE '%'||#{map.productName}||'%'
   </if>
    </select>


    <select id="getPartnerBillTableOnceCount" resultType="Map" parameterType="Map">
        SELECT
        SUM(A.SETTLE_MONEY-0) AS countmoney
        FROM
        tf_asiainfo_bill A
        LEFT JOIN tf_asiainfo_goods C
       ON A.GOOD_ID = C.GOOD_ID
       LEFT JOIN tf_asiainfo_product D
       ON A.PRODUCT_ID=D.PRODUCT_ID
        WHERE
        A.CYCLE_CODE=#{map.CYCLE_CODE}
        AND D.CHARGE_TYPE=#{map.CHARGE_TYPE}
    </select>




    <select id="getPartnerBillTableByUse" resultType="com.ai.cloudframe.provider.api.sys.model.vo.ChargeOffVo" parameterType="Map">
        SELECT
        A.API_ID,
        A.GOOD_ID,
        A.APPLICATION_ID,
        A.USER_ID,
        A.USE_COUNT,
        A.CHANNEL_ID,
        A.TOKEN,
        A.CALL_START_TIME,
        A.CALL_END_TIME,
        A.RESULT_CODE,
        A.RESULT_MESSAGE,
        A.PRODUCT_ID,
        A.IS_CHARGEOFF,
        E.ORDER_ID,
        E.ORDER_DATE,
        C.GOOD_NAME,
        D.PRODUCT_NAME,
        D.CHARGE_TYPE,
        B.API_NAME,
        F.APPLICATION_NAME,
        G.GOOD_PRODUCT_PRICE,
        H.USER_NAME
        FROM
        tf_asiainfo_api_statistics A
        LEFT JOIN tf_asiainfo_goods C
        ON A.GOOD_ID = C.GOOD_ID
        LEFT JOIN tf_asiainfo_product D
        ON A.PRODUCT_ID=D.PRODUCT_ID
        LEFT JOIN tf_asiainfo_goods_order E
        ON A.GOOD_ID=E.GOOD_ID
        AND A.USER_ID=E.USER_ID
        LEFT JOIN tf_asiainfo_product_good G
        ON A.GOOD_ID=G.GOOD_ID
        AND A.PRODUCT_ID=G.PRODUCT_ID
        LEFT JOIN tf_asiainfo_api B
        ON A.API_ID=B.API_ID
        LEFT JOIN tf_asiainfo_application F
        ON F.APPLICATION_ID=A.APPLICATION_ID
        LEFT JOIN td_asiainfo_user H
        ON A.USER_ID=H.USER_ID
        WHERE
        A.IS_CHARGEOFF='1'
        AND A.CALL_START_TIME >= to_date(#{map.start},'yyyy-mm-dd hh24:mi:ss')
        AND A.CALL_START_TIME &lt;= to_date(#{map.end},'yyyy-mm-dd hh24:mi:ss')
        <if test="map.apiName!=null and map.apiName!=''">
            AND B.API_NAME LIKE '%'||#{map.apiName}||'%'
        </if>
        <if test="map.applicationName!=null and map.applicationName!=''">
            AND F.APPLICATION_NAME LIKE '%'||#{map.applicationName}||'%'
        </if>
        ORDER BY A.CALL_START_TIME
    </select>

    <select id="getSettleRuleTable" resultType="com.ai.cloudframe.provider.api.sys.model.vo.ChargeOffVo" parameterType="Map">
SELECT
  A.RULE_ID,
  A.GOOD_ID,
  A.PRODUCT_ID,
  A.SETTLE_SCALE,
  A.SETTLER_TYPE,
  A.CHARGE_TYPE,
  A.SETTLER_CYCLE,
  A.START_DATE,
  A.END_DATE,
C.GOOD_NAME,
C.GOOD_TYPE,
D.PRODUCT_NAME,
D.PRODUCT_PRICE,
G.GOOD_PRODUCT_PRICE,
H.USER_NAME
from tf_asiainfo_settle_rule A
 LEFT JOIN tf_asiainfo_goods C
        ON A.GOOD_ID = C.GOOD_ID
        LEFT JOIN tf_asiainfo_product D
        ON A.PRODUCT_ID=D.PRODUCT_ID
 LEFT JOIN tf_asiainfo_product_good G
        ON A.GOOD_ID=G.GOOD_ID
        AND A.PRODUCT_ID=G.PRODUCT_ID
        LEFT JOIN tf_asiainfo_introduce_product J
        ON A.PRODUCT_ID=J.PRODUCT_ID
        LEFT JOIN td_asiainfo_user H
        ON J.CREATE_USER_ID=H.USER_ID
        WHERE 1=1
        <if test="map.vague!=null and map.vague!=''" >
            AND (C.GOOD_NAME LIKE '%'||#{map.vague}||'%' OR D.PRODUCT_NAME  LIKE '%'||#{map.vague}||'%')
        </if>
ORDER BY A.GOOD_ID
    </select>


    <update id="updateSettleScale" parameterType="Map">
        UPDATE tf_asiainfo_settle_rule
        SET SETTLE_SCALE=#{map.settleScale,jdbcType=VARCHAR}
        WHERE RULE_ID=#{map.ruleId,jdbcType=VARCHAR}
    </update>
</mapper>
